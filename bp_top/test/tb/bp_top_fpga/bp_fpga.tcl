#*****************************************************************************************
# Vivado (TM) v2019.1 (64-bit)
#
# bp_fpga.tcl: Tcl script for re-creating project 'artix_7_xdma'
#
# Generated by Vivado on Wed Feb 12 14:28:45 PST 2020
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (bp_fpga.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_defines.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_noc_links.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_aviary_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_csr_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_fe_be_if.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_me_if.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_rv64_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/include/bp_fe_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/include/bp_fe_icache.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/include/bp_fe_lce.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/include/bp_fe_mem_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_ctl_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_internal_if_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_mem_defines.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_dcache/bp_be_dcache_stat_info.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_dcache/bp_be_dcache_tag_info.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_dcache/bp_be_dcache_wbuf_entry.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_dcache/bp_be_dcache_pkt.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_dcache/bp_be_dcache_lce_pkt.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/include/v/bp_cce_inst.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/include/v/bp_me_cce_mem_if.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/include/v/bp_mem_wormhole.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_noc_pkg.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router_pkg.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_pkg.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_rv64_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_aviary_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/include/bp_common_cfg_link_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/include/bp_fe_icache_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/include/bp_fe_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/include/bp_be_dcache/bp_be_dcache_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/include/v/bp_cce_pkg.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/include/v/bp_me_pkg.vh"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_async/bsg_async_fifo.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_async/bsg_launch_sync_sync.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_async/bsg_async_ptr_gray.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_two_fifo.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_shift_reg.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_round_robin_n_to_1.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_one_fifo.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_fifo_tracker.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_flow_counter.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_dynamic.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out_dynamic.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_unhardened.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte_synth.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_synth.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_cam_1r1w.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_mem_1r1w_synth.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync_synth.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_mem/bsg_mem_1r1w.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/hard/ultrascale_plus/bsg_mem/bsg_mem_1rw_sync_mask_write_bit.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_mux_butterfly.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_mux_segmented.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_array_reverse.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_decode_with_v.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_scan.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_dff_en_bypass.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_encode_one_hot.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_crossbar_o_by_i.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_expand_bitmask.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_counter_clear_up.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_round_robin_arb.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_round_robin_1_to_n.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_full.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_decode.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_mux.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_mux_one_hot.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_counter_set_down.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_circular_ptr.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_dff_reset_en.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_transpose.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_encode.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_priority_encode.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_dff_en.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_swap.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_dff_chain.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_concentrate_static.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_array_concentrate_static.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_unconcentrate_static.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_dff_reset.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_decode.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_dff.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_counter_up_down.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_priority_encode_one_hot_out.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_mesh_stitch.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_in.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_out.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_in.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_out.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router_decoder_dor.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router_input_control.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_noc/bsg_wormhole_router_output_control.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_to_axi_tx.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_sbuf_queue.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_to_axi_rx.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_sbuf.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_miss.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_to_axi.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_dma.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/v/bp_tlb_replacement.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/v/bsg_fifo_1r1w_rolly.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/v/bp_tlb.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_top.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_mem_top.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_csr.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_checker/bp_be_scheduler.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_checker/bp_be_checker_top.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_calculator_top.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf_queue.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_lce_cmd.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_lce_req.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_ptw.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_pipe_int.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_instr_decoder.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_regfile.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_checker/bp_be_director.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_pipe_mul.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_int_alu.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_lce.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_checker/bp_be_detector.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_bypass.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_pipe_mem.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_be/src/v/bp_be_calculator/bp_be_pipe_fp.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_lce.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_icache.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_lce_req.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_pc_gen.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_instr_scan.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_lce_cmd.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_bht.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_mem.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_btb.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_fe/src/v/bp_fe_top.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_resp.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_reg.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_inst_decode.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_cmd.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_msg.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_pending.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_resp.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_alu.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_dir.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_spec.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_msg_cached.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_dir_lru_extract.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_cce_id_to_cord.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_dir_tag_checker.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_lce_id_to_cord.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_cmd.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_msg_uncached.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_pc.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_cce_gad.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_req.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cache/bp_me_cce_to_cache.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_processor.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_io_complex.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_mem_complex.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_core_complex.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_core.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_tile.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_tile_node.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_cfg.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/asm/roms/mesi/bp_cce_inst_rom_mesi.mem"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/test/common/bp_cce_mmio_cfg_loader.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/test/tb/bp_top_fpga/system_wrapper.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/test/tb/bp_top_fpga/bp_stream_mmio.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/test/tb/bp_top_fpga/bp_stream_nbf_loader.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/test/tb/bp_top_fpga/bp_stream_host.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/test/tb/bp_top_fpga/bsg_m_axi_lite_to_fifo.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cache/bp_me_cce_to_cache_dma.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_master.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cache/bp_me_cache_slice.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_client.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_cce_to_mem_link_bidir.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_accelerator_complex.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_cfg_buffered.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_clint_slice_buffered.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_arb_fixed.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bsg_async_noc_link.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_cord_to_id.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_clint_slice.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_clkgate_optional.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_common/src/v/bp_pma.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_hardened.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/wormhole/bp_me_addr_to_cce_id.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_hash_bank.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cache/bp_me_cce_to_cache_buffered.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cache/bp_me_cache_dma_to_cce.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_cache/bsg_cache_decode.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_io_tile_node.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_io_tile.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/src/v/bp_io_link_to_lce.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_me/src/v/cce/bp_io_cce.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_counter_set_en.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_strobe.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_xnor.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_nor3.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_muxi2_gatestack.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_reduce.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_buf.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_nand.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_dlatch.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/external/basejump_stl/bsg_misc/bsg_reduce_segmented.v"
#    "/home/paul/artix_7_test/artix_7_xdma_dram_host_bp_cfg_new_exported/artix_7_xdma.srcs/pre-alpha-release/bp_top/test/tb/bp_top_fpga/system.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "artix_7_xdma"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "bp_fpga.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../../../../../"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a200tfbg676-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:ac701:part0:1.4" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "ac701" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "None" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "2" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "2" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "2" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "2" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "2" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "2" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "2" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_defines.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_noc_links.vh" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_aviary_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_csr_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_fe_be_if.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_me_if.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_rv64_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/include/bp_fe_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/include/bp_fe_icache.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/include/bp_fe_lce.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/include/bp_fe_mem_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_ctl_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_internal_if_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_mem_defines.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_dcache/bp_be_dcache_stat_info.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_dcache/bp_be_dcache_tag_info.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_dcache/bp_be_dcache_wbuf_entry.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_dcache/bp_be_dcache_pkt.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_dcache/bp_be_dcache_lce_pkt.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/include/v/bp_cce_inst.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/include/v/bp_me_cce_mem_if.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/include/v/bp_mem_wormhole.vh" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_noc_pkg.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router_pkg.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_pkg.v" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_rv64_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_aviary_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/include/bp_common_cfg_link_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/include/bp_fe_icache_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/include/bp_fe_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/include/bp_be_dcache/bp_be_dcache_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/include/v/bp_cce_pkg.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/include/v/bp_me_pkg.vh" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_async/bsg_async_fifo.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_async/bsg_launch_sync_sync.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_async/bsg_async_ptr_gray.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_two_fifo.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_shift_reg.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_round_robin_n_to_1.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_one_fifo.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_fifo_tracker.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_flow_counter.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_dynamic.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out_dynamic.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_unhardened.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte_synth.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_synth.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_mem_1rw_sync.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_cam_1r1w.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_mem_1r1w_synth.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_mem_1rw_sync_mask_write_byte.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync_synth.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_mem_2r1w_sync.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_mem/bsg_mem_1r1w.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/hard/ultrascale_plus/bsg_mem/bsg_mem_1rw_sync_mask_write_bit.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_mux_butterfly.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_mux_segmented.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_array_reverse.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_decode_with_v.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_scan.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_dff_en_bypass.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_encode_one_hot.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_crossbar_o_by_i.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_expand_bitmask.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_counter_clear_up.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_round_robin_arb.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_round_robin_1_to_n.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_full.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_decode.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_mux.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_mux_one_hot.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_counter_set_down.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_circular_ptr.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_dff_reset_en.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_transpose.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_encode.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_priority_encode.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_dff_en.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_swap.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_dff_chain.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_concentrate_static.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_array_concentrate_static.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_unconcentrate_static.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_dff_reset.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_lru_pseudo_tree_decode.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_dff.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_counter_up_down.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_priority_encode_one_hot_out.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_mesh_stitch.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_concentrator.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_in.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_concentrator_out.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_in.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router_adapter_out.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router_decoder_dor.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router_input_control.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_noc/bsg_wormhole_router_output_control.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_to_axi_tx.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_sbuf_queue.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_to_axi_rx.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_sbuf.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_miss.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_to_axi.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_dma.v" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/v/bp_tlb_replacement.v" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/v/bsg_fifo_1r1w_rolly.v" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/v/bp_tlb.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_top.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_mem_top.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_csr.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_checker/bp_be_scheduler.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_checker/bp_be_checker_top.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_calculator_top.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf_queue.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_lce_cmd.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_lce_req.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_ptw.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_pipe_int.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_instr_decoder.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_regfile.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_checker/bp_be_director.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_pipe_mul.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_int_alu.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_lce.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_checker/bp_be_detector.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_mem/bp_be_dcache/bp_be_dcache_wbuf.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_bypass.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_pipe_mem.v" ]\
 [file normalize "${origin_dir}/../../../../bp_be/src/v/bp_be_calculator/bp_be_pipe_fp.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_lce.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_icache.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_lce_req.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_pc_gen.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_instr_scan.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_lce_cmd.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_bht.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_mem.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_btb.v" ]\
 [file normalize "${origin_dir}/../../../../bp_fe/src/v/bp_fe_top.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_resp.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_reg.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_inst_decode.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_cmd.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_msg.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_pending.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_resp.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_alu.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_dir.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_spec.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_msg_cached.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_dir_lru_extract.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_cce_id_to_cord.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_dir_tag_checker.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_lce_id_to_cord.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_mem_cmd.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_msg_uncached.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_pc.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_cce_gad.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_wormhole_packet_encode_lce_req.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cache/bp_me_cce_to_cache.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_processor.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_io_complex.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_mem_complex.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_core_complex.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_core.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_tile.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_tile_node.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_cfg.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/asm/roms/mesi/bp_cce_inst_rom_mesi.mem" ]\
 [file normalize "${origin_dir}/../../../../bp_me/test/common/bp_cce_mmio_cfg_loader.v" ]\
 [file normalize "${origin_dir}/system_wrapper.v" ]\
 [file normalize "${origin_dir}/bp_stream_mmio.v" ]\
 [file normalize "${origin_dir}/bp_stream_nbf_loader.v" ]\
 [file normalize "${origin_dir}/bp_stream_host.v" ]\
 [file normalize "${origin_dir}/bsg_m_axi_lite_to_fifo.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cache/bp_me_cce_to_cache_dma.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_cce_to_mem_link_master.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cache/bp_me_cache_slice.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_cce_to_mem_link_client.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_cce_to_mem_link_bidir.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_accelerator_complex.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_cfg_buffered.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_clint_slice_buffered.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_arb_fixed.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bsg_async_noc_link.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_cord_to_id.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_clint_slice.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_clkgate_optional.v" ]\
 [file normalize "${origin_dir}/../../../../bp_common/src/v/bp_pma.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small_hardened.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/wormhole/bp_me_addr_to_cce_id.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_hash_bank.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cache/bp_me_cce_to_cache_buffered.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cache/bp_me_cache_dma_to_cce.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_cache/bsg_cache_decode.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_io_tile_node.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_io_tile.v" ]\
 [file normalize "${origin_dir}/../../../src/v/bp_io_link_to_lce.v" ]\
 [file normalize "${origin_dir}/../../../../bp_me/src/v/cce/bp_io_cce.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_counter_set_en.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_strobe.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_xnor.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_nor3.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_muxi2_gatestack.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_reduce.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_buf.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_nand.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_dlatch.v" ]\
 [file normalize "${origin_dir}/../../../../external/basejump_stl/bsg_misc/bsg_reduce_segmented.v" ]\
]
set added_files [add_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "bsg_misc/bsg_defines.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "bsg_noc/bsg_noc_links.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "include/bp_common_aviary_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_common_csr_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_common_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_common_fe_be_if.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_common_me_if.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_common_rv64_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_fe_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_fe_icache.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_fe_lce.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_fe_mem_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_be_ctl_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_be_internal_if_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "include/bp_be_mem_defines.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_stat_info.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_tag_info.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_wbuf_entry.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_pkt.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_lce_pkt.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "v/bp_cce_inst.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "v/bp_me_cce_mem_if.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "v/bp_mem_wormhole.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "bsg_noc/bsg_noc_pkg.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router_pkg.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_pkg.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "include/bp_common_rv64_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "include/bp_common_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "include/bp_common_aviary_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "include/bp_common_cfg_link_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "include/bp_fe_icache_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "include/bp_fe_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "include/bp_be_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_cce_pkg.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_me_pkg.vh"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_async/bsg_async_fifo.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_async/bsg_launch_sync_sync.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_async/bsg_async_ptr_gray.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_two_fifo.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_shift_reg.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_round_robin_n_to_1.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_one_fifo.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_serial_in_parallel_out.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_fifo_tracker.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_flow_counter.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_fifo_1r1w_small.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_serial_in_parallel_out_dynamic.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_parallel_in_serial_out_dynamic.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_parallel_in_serial_out.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_fifo_1r1w_small_unhardened.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_1rw_sync_mask_write_byte_synth.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_1rw_sync_synth.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_1rw_sync.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_cam_1r1w.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_1r1w_synth.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_1rw_sync_mask_write_byte.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_2r1w_sync_synth.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_2r1w_sync.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_1r1w.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_mem/bsg_mem_1rw_sync_mask_write_bit.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_mux_butterfly.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_mux_segmented.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_array_reverse.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_decode_with_v.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_scan.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_dff_en_bypass.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_encode_one_hot.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_crossbar_o_by_i.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_expand_bitmask.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_counter_clear_up.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_round_robin_arb.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_round_robin_1_to_n.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_serial_in_parallel_out_full.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_decode.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_mux.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_mux_one_hot.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_counter_set_down.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_circular_ptr.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_dff_reset_en.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_transpose.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_lru_pseudo_tree_encode.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_priority_encode.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_dff_en.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_swap.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_dff_chain.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_concentrate_static.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_array_concentrate_static.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_unconcentrate_static.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_dff_reset.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_lru_pseudo_tree_decode.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_dff.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_counter_up_down.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_priority_encode_one_hot_out.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_mesh_stitch.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_concentrator.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_concentrator_in.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_concentrator_out.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router_adapter.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router_adapter_in.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router_adapter_out.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router_decoder_dor.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router_input_control.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_noc/bsg_wormhole_router_output_control.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_to_axi_tx.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_sbuf_queue.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_to_axi_rx.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_sbuf.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_miss.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_to_axi.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_dma.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_tlb_replacement.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bsg_fifo_1r1w_rolly.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_tlb.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_be_top.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_mem/bp_be_mem_top.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_mem/bp_be_csr.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_checker/bp_be_scheduler.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_checker/bp_be_checker_top.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_calculator_top.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_wbuf_queue.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_lce_cmd.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_lce_req.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_mem/bp_be_ptw.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_pipe_int.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_instr_decoder.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_regfile.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_checker/bp_be_director.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_pipe_mul.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_int_alu.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_lce.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_checker/bp_be_detector.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_dcache/bp_be_dcache_wbuf.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_bypass.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_pipe_mem.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_be_calculator/bp_be_pipe_fp.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_lce.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_icache.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_lce_req.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_pc_gen.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_instr_scan.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_lce_cmd.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_bht.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_mem.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_btb.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_fe_top.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_wormhole_packet_encode_lce_resp.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_reg.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_inst_decode.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_wormhole_packet_encode_lce_cmd.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_msg.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_pending.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_wormhole_packet_encode_mem_resp.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_alu.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_dir.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_spec.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_msg_cached.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_dir_lru_extract.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_cce_id_to_cord.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_dir_tag_checker.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_lce_id_to_cord.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_wormhole_packet_encode_mem_cmd.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_msg_uncached.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_pc.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_cce_gad.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_wormhole_packet_encode_lce_req.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cache/bp_me_cce_to_cache.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_processor.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_io_complex.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_mem_complex.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_core_complex.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_core.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_tile.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_tile_node.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_cfg.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "mesi/bp_cce_inst_rom_mesi.mem"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Memory File" -objects $file_obj

set file "common/bp_cce_mmio_cfg_loader.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_top_fpga/system_wrapper.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_top_fpga/bp_stream_mmio.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_top_fpga/bp_stream_nbf_loader.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_top_fpga/bp_stream_host.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bp_top_fpga/bsg_m_axi_lite_to_fifo.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


set file "cache/bp_me_cce_to_cache_dma.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_cce_to_mem_link_master.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cache/bp_me_cache_slice.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_cce_to_mem_link_client.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_cce_to_mem_link_bidir.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_accelerator_complex.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_cfg_buffered.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_clint_slice_buffered.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_arb_fixed.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bsg_async_noc_link.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_cord_to_id.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_clint_slice.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_clkgate_optional.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_pma.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_dataflow/bsg_fifo_1r1w_small_hardened.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "wormhole/bp_me_addr_to_cce_id.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_hash_bank.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cache/bp_me_cce_to_cache_buffered.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cache/bp_me_cache_dma_to_cce.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_cache/bsg_cache_decode.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_io_tile_node.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_io_tile.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "v/bp_io_link_to_lce.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "cce/bp_io_cce.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_counter_set_en.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_strobe.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_xnor.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_nor3.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_muxi2_gatestack.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_reduce.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_buf.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_nand.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_dlatch.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "bsg_misc/bsg_reduce_segmented.v"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj



# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "system_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/system.xdc"]"
set file_added [add_files -fileset constrs_1 [list $file]]
set file "bp_top_fpga/system.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "bsg_cache_to_axi" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD system
proc cr_bd_system { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name system

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_bram_ctrl:4.1\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:ila:6.2\
  xilinx.com:ip:mig_7series:4.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:xdma:4.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }


##################################################################
# MIG PRJ FILE TCL PROCs
##################################################################

proc write_mig_file_system_mig_7series_0_0 { str_mig_prj_filepath } {

   file mkdir [ file dirname "$str_mig_prj_filepath" ]
   set mig_prj_file [open $str_mig_prj_filepath  w+]

   puts $mig_prj_file {﻿<?xml version="1.0" encoding="UTF-8" standalone="no" ?>}
   puts $mig_prj_file {<Project NoOfControllers="1">}
   puts $mig_prj_file {  <!-- IMPORTANT: This is an internal file that has been generated by the MIG software. Any direct editing or changes made to this file may result in unpredictable behavior or data corruption. It is strongly advised that users do not edit the contents of this file. Re-run the MIG GUI with the required settings if any of the options provided below need to be altered. -->}
   puts $mig_prj_file {  <ModuleName>system_mig_7series_0_0</ModuleName>}
   puts $mig_prj_file {  <dci_inouts_inputs>1</dci_inouts_inputs>}
   puts $mig_prj_file {  <dci_inputs>1</dci_inputs>}
   puts $mig_prj_file {  <Debug_En>OFF</Debug_En>}
   puts $mig_prj_file {  <DataDepth_En>1024</DataDepth_En>}
   puts $mig_prj_file {  <LowPower_En>ON</LowPower_En>}
   puts $mig_prj_file {  <XADC_En>Enabled</XADC_En>}
   puts $mig_prj_file {  <TargetFPGA>xc7a200t-fbg676/-2</TargetFPGA>}
   puts $mig_prj_file {  <Version>4.2</Version>}
   puts $mig_prj_file {  <SystemClock>Differential</SystemClock>}
   puts $mig_prj_file {  <ReferenceClock>Use System Clock</ReferenceClock>}
   puts $mig_prj_file {  <SysResetPolarity>ACTIVE LOW</SysResetPolarity>}
   puts $mig_prj_file {  <BankSelectionFlag>FALSE</BankSelectionFlag>}
   puts $mig_prj_file {  <InternalVref>0</InternalVref>}
   puts $mig_prj_file {  <dci_hr_inouts_inputs>40 Ohms</dci_hr_inouts_inputs>}
   puts $mig_prj_file {  <dci_cascade>0</dci_cascade>}
   puts $mig_prj_file {  <Controller number="0">}
   puts $mig_prj_file {    <MemoryDevice>DDR3_SDRAM/SODIMMs/MT8JTF12864HZ-1G6</MemoryDevice>}
   puts $mig_prj_file {    <TimePeriod>2500</TimePeriod>}
   puts $mig_prj_file {    <VccAuxIO>1.8V</VccAuxIO>}
   puts $mig_prj_file {    <PHYRatio>4:1</PHYRatio>}
   puts $mig_prj_file {    <InputClkFreq>200</InputClkFreq>}
   puts $mig_prj_file {    <UIExtraClocks>1</UIExtraClocks>}
   puts $mig_prj_file {    <MMCM_VCO>800</MMCM_VCO>}
   puts $mig_prj_file {    <MMCMClkOut0>16.000</MMCMClkOut0>}
   puts $mig_prj_file {    <MMCMClkOut1>16</MMCMClkOut1>}
   puts $mig_prj_file {    <MMCMClkOut2>16</MMCMClkOut2>}
   puts $mig_prj_file {    <MMCMClkOut3>16</MMCMClkOut3>}
   puts $mig_prj_file {    <MMCMClkOut4>16</MMCMClkOut4>}
   puts $mig_prj_file {    <DataWidth>64</DataWidth>}
   puts $mig_prj_file {    <DeepMemory>1</DeepMemory>}
   puts $mig_prj_file {    <DataMask>1</DataMask>}
   puts $mig_prj_file {    <ECC>Disabled</ECC>}
   puts $mig_prj_file {    <Ordering>Normal</Ordering>}
   puts $mig_prj_file {    <BankMachineCnt>4</BankMachineCnt>}
   puts $mig_prj_file {    <CustomPart>FALSE</CustomPart>}
   puts $mig_prj_file {    <NewPartName></NewPartName>}
   puts $mig_prj_file {    <RowAddress>14</RowAddress>}
   puts $mig_prj_file {    <ColAddress>10</ColAddress>}
   puts $mig_prj_file {    <BankAddress>3</BankAddress>}
   puts $mig_prj_file {    <MemoryVoltage>1.5V</MemoryVoltage>}
   puts $mig_prj_file {    <C0_MEM_SIZE>1073741824</C0_MEM_SIZE>}
   puts $mig_prj_file {    <UserMemoryAddressMap>BANK_ROW_COLUMN</UserMemoryAddressMap>}
   puts $mig_prj_file {    <PinSelection>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="M4" SLEW="" VCCAUX_IO="" name="ddr3_addr[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="N7" SLEW="" VCCAUX_IO="" name="ddr3_addr[10]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="L5" SLEW="" VCCAUX_IO="" name="ddr3_addr[11]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="L7" SLEW="" VCCAUX_IO="" name="ddr3_addr[12]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="N6" SLEW="" VCCAUX_IO="" name="ddr3_addr[13]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="J3" SLEW="" VCCAUX_IO="" name="ddr3_addr[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="J1" SLEW="" VCCAUX_IO="" name="ddr3_addr[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="L4" SLEW="" VCCAUX_IO="" name="ddr3_addr[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="K5" SLEW="" VCCAUX_IO="" name="ddr3_addr[4]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="M7" SLEW="" VCCAUX_IO="" name="ddr3_addr[5]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="K1" SLEW="" VCCAUX_IO="" name="ddr3_addr[6]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="M6" SLEW="" VCCAUX_IO="" name="ddr3_addr[7]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="H1" SLEW="" VCCAUX_IO="" name="ddr3_addr[8]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="K3" SLEW="" VCCAUX_IO="" name="ddr3_addr[9]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="N1" SLEW="" VCCAUX_IO="" name="ddr3_ba[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="M1" SLEW="" VCCAUX_IO="" name="ddr3_ba[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="H2" SLEW="" VCCAUX_IO="" name="ddr3_ba[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="T4" SLEW="" VCCAUX_IO="" name="ddr3_cas_n"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="L2" SLEW="" VCCAUX_IO="" name="ddr3_ck_n[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="M2" SLEW="" VCCAUX_IO="" name="ddr3_ck_p[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="P4" SLEW="" VCCAUX_IO="" name="ddr3_cke[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="T3" SLEW="" VCCAUX_IO="" name="ddr3_cs_n[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AC6" SLEW="" VCCAUX_IO="" name="ddr3_dm[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AC4" SLEW="" VCCAUX_IO="" name="ddr3_dm[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA3" SLEW="" VCCAUX_IO="" name="ddr3_dm[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="U7" SLEW="" VCCAUX_IO="" name="ddr3_dm[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="G1" SLEW="" VCCAUX_IO="" name="ddr3_dm[4]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="F3" SLEW="" VCCAUX_IO="" name="ddr3_dm[5]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="G5" SLEW="" VCCAUX_IO="" name="ddr3_dm[6]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="H9" SLEW="" VCCAUX_IO="" name="ddr3_dm[7]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AB6" SLEW="" VCCAUX_IO="" name="ddr3_dq[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AF3" SLEW="" VCCAUX_IO="" name="ddr3_dq[10]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AE3" SLEW="" VCCAUX_IO="" name="ddr3_dq[11]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AD3" SLEW="" VCCAUX_IO="" name="ddr3_dq[12]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AC3" SLEW="" VCCAUX_IO="" name="ddr3_dq[13]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AB4" SLEW="" VCCAUX_IO="" name="ddr3_dq[14]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA4" SLEW="" VCCAUX_IO="" name="ddr3_dq[15]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AC2" SLEW="" VCCAUX_IO="" name="ddr3_dq[16]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AB2" SLEW="" VCCAUX_IO="" name="ddr3_dq[17]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AF2" SLEW="" VCCAUX_IO="" name="ddr3_dq[18]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AE2" SLEW="" VCCAUX_IO="" name="ddr3_dq[19]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA8" SLEW="" VCCAUX_IO="" name="ddr3_dq[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y1" SLEW="" VCCAUX_IO="" name="ddr3_dq[20]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y2" SLEW="" VCCAUX_IO="" name="ddr3_dq[21]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AC1" SLEW="" VCCAUX_IO="" name="ddr3_dq[22]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AB1" SLEW="" VCCAUX_IO="" name="ddr3_dq[23]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y3" SLEW="" VCCAUX_IO="" name="ddr3_dq[24]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="W3" SLEW="" VCCAUX_IO="" name="ddr3_dq[25]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="W6" SLEW="" VCCAUX_IO="" name="ddr3_dq[26]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="V6" SLEW="" VCCAUX_IO="" name="ddr3_dq[27]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="W4" SLEW="" VCCAUX_IO="" name="ddr3_dq[28]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="W5" SLEW="" VCCAUX_IO="" name="ddr3_dq[29]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y8" SLEW="" VCCAUX_IO="" name="ddr3_dq[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="W1" SLEW="" VCCAUX_IO="" name="ddr3_dq[30]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="V1" SLEW="" VCCAUX_IO="" name="ddr3_dq[31]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="G2" SLEW="" VCCAUX_IO="" name="ddr3_dq[32]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="D1" SLEW="" VCCAUX_IO="" name="ddr3_dq[33]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="E1" SLEW="" VCCAUX_IO="" name="ddr3_dq[34]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="E2" SLEW="" VCCAUX_IO="" name="ddr3_dq[35]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="F2" SLEW="" VCCAUX_IO="" name="ddr3_dq[36]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="A2" SLEW="" VCCAUX_IO="" name="ddr3_dq[37]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="A3" SLEW="" VCCAUX_IO="" name="ddr3_dq[38]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="C2" SLEW="" VCCAUX_IO="" name="ddr3_dq[39]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AB5" SLEW="" VCCAUX_IO="" name="ddr3_dq[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="C3" SLEW="" VCCAUX_IO="" name="ddr3_dq[40]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="D3" SLEW="" VCCAUX_IO="" name="ddr3_dq[41]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="A4" SLEW="" VCCAUX_IO="" name="ddr3_dq[42]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="B4" SLEW="" VCCAUX_IO="" name="ddr3_dq[43]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="C4" SLEW="" VCCAUX_IO="" name="ddr3_dq[44]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="D4" SLEW="" VCCAUX_IO="" name="ddr3_dq[45]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="D5" SLEW="" VCCAUX_IO="" name="ddr3_dq[46]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="E5" SLEW="" VCCAUX_IO="" name="ddr3_dq[47]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="F4" SLEW="" VCCAUX_IO="" name="ddr3_dq[48]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="G4" SLEW="" VCCAUX_IO="" name="ddr3_dq[49]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AA5" SLEW="" VCCAUX_IO="" name="ddr3_dq[4]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="K6" SLEW="" VCCAUX_IO="" name="ddr3_dq[50]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="K7" SLEW="" VCCAUX_IO="" name="ddr3_dq[51]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="K8" SLEW="" VCCAUX_IO="" name="ddr3_dq[52]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="L8" SLEW="" VCCAUX_IO="" name="ddr3_dq[53]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="J5" SLEW="" VCCAUX_IO="" name="ddr3_dq[54]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="J6" SLEW="" VCCAUX_IO="" name="ddr3_dq[55]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="G6" SLEW="" VCCAUX_IO="" name="ddr3_dq[56]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="H6" SLEW="" VCCAUX_IO="" name="ddr3_dq[57]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="F7" SLEW="" VCCAUX_IO="" name="ddr3_dq[58]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="F8" SLEW="" VCCAUX_IO="" name="ddr3_dq[59]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y5" SLEW="" VCCAUX_IO="" name="ddr3_dq[5]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="G8" SLEW="" VCCAUX_IO="" name="ddr3_dq[60]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="H8" SLEW="" VCCAUX_IO="" name="ddr3_dq[61]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="D6" SLEW="" VCCAUX_IO="" name="ddr3_dq[62]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="E6" SLEW="" VCCAUX_IO="" name="ddr3_dq[63]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y6" SLEW="" VCCAUX_IO="" name="ddr3_dq[6]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="Y7" SLEW="" VCCAUX_IO="" name="ddr3_dq[7]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AF4" SLEW="" VCCAUX_IO="" name="ddr3_dq[8]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="AF5" SLEW="" VCCAUX_IO="" name="ddr3_dq[9]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="W8" SLEW="" VCCAUX_IO="" name="ddr3_dqs_n[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="AE5" SLEW="" VCCAUX_IO="" name="ddr3_dqs_n[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="AE1" SLEW="" VCCAUX_IO="" name="ddr3_dqs_n[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="V2" SLEW="" VCCAUX_IO="" name="ddr3_dqs_n[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="B1" SLEW="" VCCAUX_IO="" name="ddr3_dqs_n[4]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="A5" SLEW="" VCCAUX_IO="" name="ddr3_dqs_n[5]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="H4" SLEW="" VCCAUX_IO="" name="ddr3_dqs_n[6]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="G7" SLEW="" VCCAUX_IO="" name="ddr3_dqs_n[7]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="V8" SLEW="" VCCAUX_IO="" name="ddr3_dqs_p[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="AD5" SLEW="" VCCAUX_IO="" name="ddr3_dqs_p[1]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="AD1" SLEW="" VCCAUX_IO="" name="ddr3_dqs_p[2]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="V3" SLEW="" VCCAUX_IO="" name="ddr3_dqs_p[3]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="C1" SLEW="" VCCAUX_IO="" name="ddr3_dqs_p[4]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="B5" SLEW="" VCCAUX_IO="" name="ddr3_dqs_p[5]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="J4" SLEW="" VCCAUX_IO="" name="ddr3_dqs_p[6]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="DIFF_SSTL15" PADName="H7" SLEW="" VCCAUX_IO="" name="ddr3_dqs_p[7]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="R2" SLEW="" VCCAUX_IO="" name="ddr3_odt[0]"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="P1" SLEW="" VCCAUX_IO="" name="ddr3_ras_n"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="LVCMOS15" PADName="N8" SLEW="" VCCAUX_IO="" name="ddr3_reset_n"/>}
   puts $mig_prj_file {      <Pin IN_TERM="" IOSTANDARD="SSTL15" PADName="R1" SLEW="" VCCAUX_IO="" name="ddr3_we_n"/>}
   puts $mig_prj_file {    </PinSelection>}
   puts $mig_prj_file {    <System_Clock>}
   puts $mig_prj_file {      <Pin Bank="34" PADName="R3/P3(CC_P/N)" name="sys_clk_p/n"/>}
   puts $mig_prj_file {    </System_Clock>}
   puts $mig_prj_file {    <System_Control>}
   puts $mig_prj_file {      <Pin Bank="Select Bank" PADName="No connect" name="sys_rst"/>}
   puts $mig_prj_file {      <Pin Bank="14" PADName="M26" name="init_calib_complete"/>}
   puts $mig_prj_file {      <Pin Bank="14" PADName="T24" name="tg_compare_error"/>}
   puts $mig_prj_file {    </System_Control>}
   puts $mig_prj_file {    <TimingParameters>}
   puts $mig_prj_file {      <Parameters tcke="5" tfaw="30" tras="35" trcd="13.125" trefi="7.8" trfc="110" trp="13.125" trrd="6" trtp="7.5" twtr="7.5"/>}
   puts $mig_prj_file {    </TimingParameters>}
   puts $mig_prj_file {    <mrBurstLength name="Burst Length">8 - Fixed</mrBurstLength>}
   puts $mig_prj_file {    <mrBurstType name="Read Burst Type and Length">Sequential</mrBurstType>}
   puts $mig_prj_file {    <mrCasLatency name="CAS Latency">6</mrCasLatency>}
   puts $mig_prj_file {    <mrMode name="Mode">Normal</mrMode>}
   puts $mig_prj_file {    <mrDllReset name="DLL Reset">No</mrDllReset>}
   puts $mig_prj_file {    <mrPdMode name="DLL control for precharge PD">Slow Exit</mrPdMode>}
   puts $mig_prj_file {    <emrDllEnable name="DLL Enable">Enable</emrDllEnable>}
   puts $mig_prj_file {    <emrOutputDriveStrength name="Output Driver Impedance Control">RZQ/7</emrOutputDriveStrength>}
   puts $mig_prj_file {    <emrMirrorSelection name="Address Mirroring">Disable</emrMirrorSelection>}
   puts $mig_prj_file {    <emrCSSelection name="Controller Chip Select Pin">Enable</emrCSSelection>}
   puts $mig_prj_file {    <emrRTT name="RTT (nominal) - On Die Termination (ODT)">RZQ/6</emrRTT>}
   puts $mig_prj_file {    <emrPosted name="Additive Latency (AL)">0</emrPosted>}
   puts $mig_prj_file {    <emrOCD name="Write Leveling Enable">Disabled</emrOCD>}
   puts $mig_prj_file {    <emrDQS name="TDQS enable">Enabled</emrDQS>}
   puts $mig_prj_file {    <emrRDQS name="Qoff">Output Buffer Enabled</emrRDQS>}
   puts $mig_prj_file {    <mr2PartialArraySelfRefresh name="Partial-Array Self Refresh">Full Array</mr2PartialArraySelfRefresh>}
   puts $mig_prj_file {    <mr2CasWriteLatency name="CAS write latency">5</mr2CasWriteLatency>}
   puts $mig_prj_file {    <mr2AutoSelfRefresh name="Auto Self Refresh">Enabled</mr2AutoSelfRefresh>}
   puts $mig_prj_file {    <mr2SelfRefreshTempRange name="High Temparature Self Refresh Rate">Normal</mr2SelfRefreshTempRange>}
   puts $mig_prj_file {    <mr2RTTWR name="RTT_WR - Dynamic On Die Termination (ODT)">Dynamic ODT off</mr2RTTWR>}
   puts $mig_prj_file {    <PortInterface>AXI</PortInterface>}
   puts $mig_prj_file {    <AXIParameters>}
   puts $mig_prj_file {      <C0_C_RD_WR_ARB_ALGORITHM>RD_PRI_REG</C0_C_RD_WR_ARB_ALGORITHM>}
   puts $mig_prj_file {      <C0_S_AXI_ADDR_WIDTH>30</C0_S_AXI_ADDR_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_DATA_WIDTH>512</C0_S_AXI_DATA_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_ID_WIDTH>1</C0_S_AXI_ID_WIDTH>}
   puts $mig_prj_file {      <C0_S_AXI_SUPPORTS_NARROW_BURST>1</C0_S_AXI_SUPPORTS_NARROW_BURST>}
   puts $mig_prj_file {    </AXIParameters>}
   puts $mig_prj_file {  </Controller>}
   puts $mig_prj_file {</Project>}

   close $mig_prj_file
}
# End of write_mig_file_system_mig_7series_0_0()



  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set ddr3_sdram [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 ddr3_sdram ]

  set m_axi_lite [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_lite ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {125000000} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.PROTOCOL {AXI4LITE} \
   ] $m_axi_lite

  set pcie_7x_mgt [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_7x_mgt ]

  set s_axi [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {512} \
   CONFIG.FREQ_HZ {50000000} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {1} \
   CONFIG.HAS_CACHE {1} \
   CONFIG.HAS_LOCK {1} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {1} \
   CONFIG.HAS_REGION {1} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {1} \
   CONFIG.MAX_BURST_LENGTH {256} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {1} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi

  set sys_diff_clock [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 sys_diff_clock ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {200000000} \
   ] $sys_diff_clock


  # Create ports
  set mig_calib_done [ create_bd_port -dir O mig_calib_done ]
  set mig_clk [ create_bd_port -dir O -type clk mig_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi} \
   CONFIG.ASSOCIATED_RESET {mig_rstn} \
   CONFIG.FREQ_HZ {50000000} \
 ] $mig_clk
  set mig_rstn [ create_bd_port -dir O -from 0 -to 0 -type rst mig_rstn ]
  set pcie_clk [ create_bd_port -dir O -type clk pcie_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {m_axi_lite} \
   CONFIG.ASSOCIATED_RESET {pcie_rstn} \
   CONFIG.FREQ_HZ {125000000} \
 ] $pcie_clk
  set pcie_lnk_up [ create_bd_port -dir O pcie_lnk_up ]
  set pcie_rstn [ create_bd_port -dir O -from 0 -to 0 -type rst pcie_rstn ]
  set reset [ create_bd_port -dir I -type rst reset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset
  set sys_clk [ create_bd_port -dir I -type clk sys_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
 ] $sys_clk
  set sys_rst_n [ create_bd_port -dir I -type rst sys_rst_n ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $sys_rst_n

  # Create instance: axi_bram_ctrl_0, and set properties
  set axi_bram_ctrl_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl:4.1 axi_bram_ctrl_0 ]
  set_property -dict [ list \
   CONFIG.DATA_WIDTH {128} \
   CONFIG.ECC_TYPE {0} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.SINGLE_PORT_BRAM {0} \
 ] $axi_bram_ctrl_0

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {1} \
 ] $axi_interconnect_0

  # Create instance: blk_mem_gen_0, and set properties
  set blk_mem_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 blk_mem_gen_0 ]
  set_property -dict [ list \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_B {Use_ENB_Pin} \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.Port_B_Clock {100} \
   CONFIG.Port_B_Enable_Rate {100} \
   CONFIG.Port_B_Write_Rate {50} \
   CONFIG.Use_RSTB_Pin {true} \
 ] $blk_mem_gen_0

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.C_ADV_TRIGGER {false} \
   CONFIG.C_ENABLE_ILA_AXI_MON {true} \
   CONFIG.C_MONITOR_TYPE {AXI} \
   CONFIG.C_NUM_OF_PROBES {19} \
   CONFIG.C_SLOT_0_AXI_PROTOCOL {AXI4LITE} \
   CONFIG.C_TRIGOUT_EN {false} \
 ] $ila_0

  # Create instance: ila_1, and set properties
  set ila_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_1 ]

  # Create instance: mig_7series_0, and set properties
  set mig_7series_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mig_7series:4.2 mig_7series_0 ]

  # Generate the PRJ File for MIG
  set str_mig_folder [get_property IP_DIR [ get_ips [ get_property CONFIG.Component_Name $mig_7series_0 ] ] ]
  set str_mig_file_name mig_a.prj
  set str_mig_file_path ${str_mig_folder}/${str_mig_file_name}

  write_mig_file_system_mig_7series_0_0 $str_mig_file_path

  set_property -dict [ list \
   CONFIG.BOARD_MIG_PARAM {ddr3_sdram} \
   CONFIG.MIG_DONT_TOUCH_PARAM {Custom} \
   CONFIG.RESET_BOARD_INTERFACE {Custom} \
   CONFIG.XML_INPUT_FILE {mig_a.prj} \
 ] $mig_7series_0

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]
  set_property -dict [ list \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $proc_sys_reset_0

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]
  set_property -dict [ list \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $proc_sys_reset_1

  # Create instance: proc_sys_reset_2, and set properties
  set proc_sys_reset_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_2 ]
  set_property -dict [ list \
   CONFIG.RESET_BOARD_INTERFACE {reset} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $proc_sys_reset_2

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PF0_DEVICE_ID_mqdma {9024} \
   CONFIG.PF2_DEVICE_ID_mqdma {9024} \
   CONFIG.PF3_DEVICE_ID_mqdma {9024} \
   CONFIG.SYS_RST_N_BOARD_INTERFACE {Custom} \
   CONFIG.axi_data_width {128_bit} \
   CONFIG.axil_master_64bit_en {false} \
   CONFIG.axilite_master_en {true} \
   CONFIG.axilite_master_scale {Kilobytes} \
   CONFIG.axilite_master_size {64} \
   CONFIG.axist_bypass_en {false} \
   CONFIG.axisten_freq {125} \
   CONFIG.pf0_device_id {7024} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_1} \
   CONFIG.pf0_msix_cap_table_bir {BAR_1} \
   CONFIG.pl_link_cap_max_link_speed {5.0_GT/s} \
   CONFIG.pl_link_cap_max_link_width {X4} \
   CONFIG.plltype {QPLL1} \
   CONFIG.ref_clk_freq {100_MHz} \
   CONFIG.xdma_axi_intf_mm {AXI_Memory_Mapped} \
   CONFIG.xdma_axilite_slave {false} \
 ] $xdma_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTA [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTA] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTA]
  connect_bd_intf_net -intf_net axi_bram_ctrl_0_BRAM_PORTB [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTB] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTB]
  connect_bd_intf_net -intf_net axi_clock_converter_0_M_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins mig_7series_0/S_AXI]
  connect_bd_intf_net -intf_net mig_7series_0_DDR3 [get_bd_intf_ports ddr3_sdram] [get_bd_intf_pins mig_7series_0/DDR3]
  connect_bd_intf_net -intf_net s_axi_1 [get_bd_intf_ports s_axi] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
connect_bd_intf_net -intf_net [get_bd_intf_nets s_axi_1] [get_bd_intf_ports s_axi] [get_bd_intf_pins ila_1/SLOT_0_AXI]
  connect_bd_intf_net -intf_net sys_diff_clock_1 [get_bd_intf_ports sys_diff_clock] [get_bd_intf_pins mig_7series_0/SYS_CLK]
  connect_bd_intf_net -intf_net xdma_0_M_AXI [get_bd_intf_pins axi_bram_ctrl_0/S_AXI] [get_bd_intf_pins xdma_0/M_AXI]
  connect_bd_intf_net -intf_net xdma_0_M_AXI_LITE [get_bd_intf_ports m_axi_lite] [get_bd_intf_pins xdma_0/M_AXI_LITE]
connect_bd_intf_net -intf_net [get_bd_intf_nets xdma_0_M_AXI_LITE] [get_bd_intf_ports m_axi_lite] [get_bd_intf_pins ila_0/SLOT_0_AXI]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports pcie_7x_mgt] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net M00_ARESETN_1 [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins mig_7series_0/aresetn] [get_bd_pins proc_sys_reset_2/peripheral_aresetn]
  connect_bd_net -net mig_7series_0_init_calib_complete [get_bd_ports mig_calib_done] [get_bd_pins mig_7series_0/init_calib_complete]
  connect_bd_net -net mig_7series_0_ui_addn_clk_0 [get_bd_ports mig_clk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins ila_1/clk] [get_bd_pins mig_7series_0/ui_addn_clk_1] [get_bd_pins proc_sys_reset_1/slowest_sync_clk]
  connect_bd_net -net mig_7series_0_ui_clk [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins mig_7series_0/ui_clk] [get_bd_pins proc_sys_reset_2/slowest_sync_clk]
  connect_bd_net -net mig_7series_0_ui_clk_sync_rst [get_bd_pins mig_7series_0/ui_clk_sync_rst] [get_bd_pins proc_sys_reset_1/aux_reset_in] [get_bd_pins proc_sys_reset_2/aux_reset_in]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_ports pcie_rstn] [get_bd_pins axi_bram_ctrl_0/s_axi_aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn [get_bd_ports mig_rstn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net reset_1 [get_bd_ports reset] [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins proc_sys_reset_1/ext_reset_in] [get_bd_pins proc_sys_reset_2/ext_reset_in]
  connect_bd_net -net sys_clk [get_bd_ports sys_clk] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net sys_rst_n [get_bd_ports sys_rst_n] [get_bd_pins mig_7series_0/sys_rst] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_ports pcie_clk] [get_bd_pins axi_bram_ctrl_0/s_axi_aclk] [get_bd_pins ila_0/clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins proc_sys_reset_0/aux_reset_in] [get_bd_pins xdma_0/axi_aresetn]
  connect_bd_net -net xdma_0_user_lnk_up [get_bd_ports pcie_lnk_up] [get_bd_pins xdma_0/user_lnk_up]

  # Create address segments
  create_bd_addr_seg -range 0x00010000 -offset 0xC0000000 [get_bd_addr_spaces xdma_0/M_AXI] [get_bd_addr_segs axi_bram_ctrl_0/S_AXI/Mem0] SEG_axi_bram_ctrl_0_Mem0
  create_bd_addr_seg -range 0x00010000 -offset 0x20000000 [get_bd_addr_spaces xdma_0/M_AXI_LITE] [get_bd_addr_segs m_axi_lite/Reg] SEG_m_axi_lite_Reg
  create_bd_addr_seg -range 0x40000000 -offset 0x80000000 [get_bd_addr_spaces s_axi] [get_bd_addr_segs mig_7series_0/memmap/memaddr] SEG_mig_7series_0_memaddr


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_system()
cr_bd_system ""
set_property REGISTERED_WITH_MANAGER "1" [get_files system.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files system.bd ] 



# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:ila:6.2\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set clk_i [ create_bd_port -dir I -type clk clk_i ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {125000000} \
 ] $clk_i
  set cmd_i [ create_bd_port -dir I -from 65 -to 0 cmd_i ]
  set cmd_o [ create_bd_port -dir I -from 65 -to 0 cmd_o ]
  set resp_i [ create_bd_port -dir I -from 65 -to 0 resp_i ]
  set resp_o [ create_bd_port -dir I -from 65 -to 0 resp_o ]

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.ALL_PROBE_SAME_MU_CNT {2} \
   CONFIG.C_DATA_DEPTH {4096} \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_EN_STRG_QUAL {0} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {4} \
   CONFIG.C_PROBE0_MU_CNT {2} \
   CONFIG.C_PROBE0_WIDTH {66} \
   CONFIG.C_PROBE1_MU_CNT {2} \
   CONFIG.C_PROBE1_WIDTH {66} \
   CONFIG.C_PROBE2_MU_CNT {2} \
   CONFIG.C_PROBE2_WIDTH {66} \
   CONFIG.C_PROBE3_MU_CNT {2} \
   CONFIG.C_PROBE3_WIDTH {66} \
   CONFIG.C_TRIGIN_EN {false} \
 ] $ila_0

  # Create port connections
  connect_bd_net -net clk_i_1 [get_bd_ports clk_i] [get_bd_pins ila_0/clk]
  connect_bd_net -net cmd_i_1 [get_bd_ports cmd_i] [get_bd_pins ila_0/probe0]
  connect_bd_net -net cmd_o_1 [get_bd_ports cmd_o] [get_bd_pins ila_0/probe1]
  connect_bd_net -net resp_i_1 [get_bd_ports resp_i] [get_bd_pins ila_0/probe2]
  connect_bd_net -net resp_o_1 [get_bd_ports resp_o] [get_bd_pins ila_0/probe3]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 



# Proc to create BD design_4
proc cr_bd_design_4 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_4

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:ila:6.2\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set clk_i [ create_bd_port -dir I -type clk clk_i ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {50000000} \
 ] $clk_i
  set cmd_o [ create_bd_port -dir I -from 65 -to 0 -type data cmd_o ]
  set resp_i [ create_bd_port -dir I -from 65 -to 0 -type data resp_i ]

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]
  set_property -dict [ list \
   CONFIG.ALL_PROBE_SAME_MU_CNT {2} \
   CONFIG.C_ADV_TRIGGER {false} \
   CONFIG.C_DATA_DEPTH {2048} \
   CONFIG.C_ENABLE_ILA_AXI_MON {false} \
   CONFIG.C_EN_STRG_QUAL {0} \
   CONFIG.C_MONITOR_TYPE {Native} \
   CONFIG.C_NUM_OF_PROBES {2} \
   CONFIG.C_PROBE0_MU_CNT {2} \
   CONFIG.C_PROBE0_WIDTH {66} \
   CONFIG.C_PROBE1_MU_CNT {2} \
   CONFIG.C_PROBE1_WIDTH {66} \
 ] $ila_0

  # Create port connections
  connect_bd_net -net clk_i_1 [get_bd_ports clk_i] [get_bd_pins ila_0/clk]
  connect_bd_net -net cmd_o_1 [get_bd_ports cmd_o] [get_bd_pins ila_0/probe0]
  connect_bd_net -net resp_i_1 [get_bd_ports resp_i] [get_bd_pins ila_0/probe1]

  # Create address segments


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_4()
cr_bd_design_4 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_4.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_4.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7a200tfbg676-2 -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7a200tfbg676-2 -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
